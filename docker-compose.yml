version: '3.1'

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    restart: always
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - E:\Project\Learning\RabbitMQ-Excercise\RabbitMQ-Reactive-MicroService\metadata\rabbitmq\data\:/var/lib/rabbitmq/
        - E:\Project\Learning\RabbitMQ-Excercise\RabbitMQ-Reactive-MicroService\metadata\rabbitmq\log\:/var/log/rabbitmq
    networks:
        - rabbitmq_go_net

  customerdb:
    image: mysql:latest
    container_name: customerdb-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: customeradmin123
      MYSQL_DATABASE: customerdb
      MYSQL_USER: customerdb
      MYSQL_PASSWORD: customerdb123
    ports:
      - "3306:3306"
    volumes:
        - E:\Project\Learning\RabbitMQ-Excercise\RabbitMQ-Reactive-MicroService\metadata\db\customerdb\:/var/lib/mysql/        
    networks:
        - rabbitmq_go_net

  orderdb:
    image: mysql:latest
    container_name: orderdb-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: orderadmin123
      MYSQL_DATABASE: orderdb
      MYSQL_USER: orderdb
      MYSQL_PASSWORD: orderdb123
    ports:
      - "3307:3306"
    volumes:
        - E:\Project\Learning\RabbitMQ-Excercise\RabbitMQ-Reactive-MicroService\metadata\db\orderdb\:/var/lib/mysql/        
    networks:
        - rabbitmq_go_net

  shipmentdb:
    image: mysql:latest
    container_name: shipmentdb-container
    restart: always    
    environment:
      MYSQL_ROOT_PASSWORD: shipmentadmin123
      MYSQL_DATABASE: shipmentdb
      MYSQL_USER: shipmentdb
      MYSQL_PASSWORD: shipmentdb123
    ports:
      - "3308:3306"    
    volumes:
        - E:\Project\Learning\RabbitMQ-Excercise\RabbitMQ-Reactive-MicroService\metadata\db\shipmentdb\:/var/lib/mysql/        
    networks:
        - rabbitmq_go_net

  reportdb:
    image: mysql:latest
    container_name: reportdb-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: reportadmin123
      MYSQL_DATABASE: reportdb
      MYSQL_USER: reportdb
      MYSQL_PASSWORD: reportdb123
    ports:
      - "3309:3306"
    volumes:
        - E:\Project\Learning\RabbitMQ-Excercise\RabbitMQ-Reactive-MicroService\metadata\db\reportdb\:/var/lib/mysql/        
    networks:
        - rabbitmq_go_net
      
networks:
  rabbitmq_go_net:
    driver: bridge

  # customerapi:
  #   build:
  #     context: .  # Specify the path to your API project directory
  #     dockerfile: CustomerDockerfile       # Specify the Dockerfile name if it's different from the default
  #   container_name: customerservice-container
  #   depends_on:
  #     - customerdb
  #   environment:
  #     ASPNETCORE_ENVIRONMENT: Development
  #     ConnectionStrings__DefaultConnection: "Server=mysql;Database=customerdb;User=customerdb;Password=customerdb123;"
  #   ports:
  #     - "5000:80"
  #     - "5001:443"

  # orderapi:
  #   build:
  #     context: .  # Specify the path to your API project directory
  #     dockerfile: OrderDockerfile       # Specify the Dockerfile name if it's different from the default
  #   container_name: orderservice-container
  #   depends_on:
  #     - orderdb
  #   environment:
  #     ASPNETCORE_ENVIRONMENT: Development
  #     ConnectionStrings__DefaultConnection: "Server=mysql;Database=orderdb;User=orderdb;Password=orderdb123;"
  #   ports:
  #     - "6000:80"
  #     - "6001:443"

  # shipmentapi:
  #   build:
  #     context: .  # Specify the path to your API project directory
  #     dockerfile: ShipmentDockerfile       # Specify the Dockerfile name if it's different from the default
  #   container_name: shipmentservice-container
  #   depends_on:
  #     - shipmentdb
  #   environment:
  #     ASPNETCORE_ENVIRONMENT: Development
  #     ConnectionStrings__DefaultConnection: "Server=mysql;Database=shipmentdb;User=shipmentdb;Password=shipmentdb123;"
  #   ports:
  #     - "7000:80"
  #     - "7001:443"

  # reportapi:
  #   build:
  #     context: .  # Specify the path to your API project directory
  #     dockerfile: ReportDockerfile       # Specify the Dockerfile name if it's different from the default
  #   container_name: reportservice-container
  #   depends_on:
  #     - reportdb
  #   environment:
  #     ASPNETCORE_ENVIRONMENT: Development
  #     ConnectionStrings__DefaultConnection: "Server=mysql;Database=reportdb;User=reportdb;Password=reportdb123;"
  #   ports:
  #     - "8000:80"      
  #     - "8001:443"      